<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>VidFetch â€“ 4K Video Downloader</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"/>
  <style>
    body {
      background-color: #f8f9fa;
      padding-top: 50px;
    }
    .container {
      max-width: 600px;
    }
    .logo {
      font-size: 2rem;
      font-weight: bold;
      color: #dc3545;
    }
    .spinner-border {
      width: 3rem;
      height: 3rem;
    }
  </style>
</head>
<body>
  <div class="container text-center">
    <div class="logo mb-4">VidFetch</div>
    <p class="mb-4">Download videos in 4K, HD, or MP3 from supported platforms.</p>
    <form id="download-form">
      <div class="mb-3">
        <input type="url" class="form-control" id="video-url" placeholder="Enter video URL" required />
      </div>
      <button type="submit" class="btn btn-danger w-100">Fetch Video</button>
    </form>
    <div id="loading" class="mt-4 d-none">
      <div class="spinner-border text-danger" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-2">Fetching video info...</p>
    </div>
    <div id="result" class="mt-4 d-none">
      <h5>Video Information</h5>
      <p id="video-title"></p>
      <a id="download-link" href="#" class="btn btn-success" target="_blank">Download</a>
    </div>
    <div id="error-message" class="mt-4 text-danger d-none"></div>
  </div>

  <script>
    const backendUrl = 'https://vidfetch-backend.up.railway.app';

    document.getElementById('download-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const videoUrl = document.getElementById('video-url').value.trim();
      const loading = document.getElementById('loading');
      const result = document.getElementById('result');
      const errorMessage = document.getElementById('error-message');
      const videoTitle = document.getElementById('video-title');
      const downloadLink = document.getElementById('download-link');

      // Reset UI
      loading.classList.remove('d-none');
      result.classList.add('d-none');
      errorMessage.classList.add('d-none');

      try {
        const response = await fetch(`${backendUrl}/info`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ url: videoUrl })
        });

        if (!response.ok) {
          throw new Error('Failed to fetch video information.');
        }

        const data = await response.json();

        if (data && data.title && data.download_url) {
          videoTitle.textContent = data.title;
          downloadLink.href = data.download_url;
          loading.classList.add('d-none');
          result.classList.remove('d-none');
        } else {
          throw new Error('Invalid response from server.');
        }
      } catch (error) {
        loading.classList.add('d-none');
        errorMessage.textContent = error.message;
        errorMessage.classList.remove('d-none');
      }
    });
  </script>
</body>
</html>
